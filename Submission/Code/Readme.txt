The data folder contains all the csv files required for execution of all the scripts and the output generated by any script is stored in the data folder itself.

Files:
	1. Training_data.csv is kept at the root which can be used to execute the MDP_process2.py to get our final result.

	2. selection.py : This file has the code for all the methods we used to seperate continuous and categorical data. Processing of continuous data by removing correlated attributes and fit PCA. For Categorical variables Mixed Factor Analysis is used.
	
	3. MFA.R: This file takes the original data as input and performs Mixed Factor Analysis on the data and saves the best 8 features in the data/FAMD_features.csv

	4. discretization.py : This file has the code for the methods we used for discretization and the code for our GREEDY DISCRETIZATION approach.

	5. neural_network_training.py: This file has the code to run train neural network and compress 124 features to 8 features. The output of 8 features is saved in /data/nn_layer2_output.csv. You will have to use one functions from discretization.py to discretize the data and pass it to the MDP_process2.py to get the ECR value.

Data:
	1. Currently the data folder only contains the output from the neural netowrk as it may take time to train. You can directly discretize this file and run the MDP_process2.py to get the resultant ECR.

	2. If you run any of the above mentioned files, the output generated from those will be saved in the /data/ folder with appropriate function name.

Required Libraries:
	Python:
	1. Matplotlib
	2. sklearn
	3. pandas
	4. numpy
	5. Tensorflow (only required if you plan to re-train the neural network)
	R:
	1. stats
	2. FactoMineR


For getting the final Training_data.csv by running the code, do the following:
1. Run Rscript MFA.R - takes input Original dataset and output FAMD_features.csv
2. Run discretization.py - takes FAMD_features.csv and outputs Training_data_generated.csv
3. Use this file as input to MDP_process2.py
